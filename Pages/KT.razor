@page "/"
@inject KTState KTState
@inject IJSRuntime JS

<h1>KT Simulator</h1>

<p>
    <a href="/bunker">🛡 Gå til Bunker</a><br />
    <a href="/drap">🔫 Gå til Drap</a><br />
    <a href="/flyplass">✈ Gå til Flyplass</a>
</p>

<h2>Min bunkerlogg</h2>
@if (MyLog?.Any() == true)
{
    <table class="kt-log-table">
        <thead>
            <tr>
                <th>Tidspunkt</th>
                <th>Varighet</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in MyLog)
            {
                <tr>
                    <td>
                        @(entry.Created_At.HasValue
                            ? entry.Created_At.Value.ToString("HH:mm:ss")
                            : "-")
                    </td>
                    <td>@TimeSpan.FromMilliseconds(entry.Duration).ToString("mm\\:ss\\.fff")</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Ingen loggdata funnet.</p>
}

<h2>Toppliste (Raskeste tider)</h2>
@if (Top10?.Any() == true)
{
    <table class="kt-log-table">
        <thead>
            <tr>
                <th>Bruker</th>
                <th>Tid</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in Top10)
            {
                <tr>
                    <td>@entry.Username</td>
                    <td>@TimeSpan.FromMilliseconds(entry.Duration).ToString("mm\\:ss\\.fff")</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Ingen tider registrert ennå.</p>
}

@code {
    public class PersonalTime
    {
        public int Duration { get; set; }
        public DateTimeOffset? Created_At { get; set; }
    }

    public class TopTime
    {
        public string Username { get; set; } = string.Empty;
        public int Duration { get; set; }
    }

    private List<PersonalTime> MyLog = new();
    private List<TopTime> Top10 = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var myLogResult = await JS.InvokeAsync<List<PersonalTime>>("getMyTimes");
            if (myLogResult != null)
                MyLog = myLogResult;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Feil ved henting av egne tider: {ex.Message}");
        }

        try
        {
            var top10Result = await JS.InvokeAsync<List<TopTime>>("getTop10");
            if (top10Result != null)
                Top10 = top10Result;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Feil ved henting av toppliste: {ex.Message}");
        }
    }
}
